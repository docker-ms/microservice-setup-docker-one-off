version: '3.2'

networks:
  default:
    external:
      name: gate_services_stack

services:

  drone-server:
    image: drone/drone:0.7.3
    volumes:
      - ${DRONE_SQLITE_DATA_PATH}:/var/lib/drone/
    ports:
      - target: 8000
        published: 64799
        mode: host
    environment:
      - SERVICE_80_IGNORE=true
      - SERVICE_443_IGNORE=true
      - SERVICE_9000_IGNORE=true
      - SERVICE_8000_NAME=drone_server

      - DRONE_OPEN=true
      - DRONE_HOST=${DRONE_HOST}
      - DRONE_SECRET=0b79c47a67be4b82a8ea5fc6e59e1c88
      - DRONE_BITBUCKET=true
      - DRONE_BITBUCKET_CLIENT=z6Yz5mFD3XwLx26f6s
      - DRONE_BITBUCKET_SECRET=mbMFFfMAz72ESsqKfHD487Y3n6zbJBfM
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.hostname == ${DRONE_HOST}

  drone-agent:
    image: drone/drone:0.7.3
    command: agent
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    environment:
      - SERVICE_80_IGNORE=true
      - SERVICE_443_IGNORE=true
      - SERVICE_9000_IGNORE=true
      - SERVICE_8000_NAME=drone_agent

      - DRONE_HOST=${DRONE_HOST}
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      # After release 0.8, will use grpc communication channel, which is running on port 9000, but not work properly yet.
      # - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=0b79c47a67be4b82a8ea5fc6e59e1c88
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.hostname == ${DRONE_HOST}
    depends_on:
      - drone-server


